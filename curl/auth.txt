=== Authentication API Endpoints ===
Base URL: http://localhost:8080/api/v1

=============================================================================
1. PING (Health Check)
=============================================================================
curl -X GET http://localhost:8080/api/v1/ping
Response: Should return pong or health status

=============================================================================
2. REGISTER
=============================================================================
curl -X POST http://localhost:8080/api/v1/register \
  -H "Content-Type: application/json" \
  -d '{
    "email": "user@example.com",
    "name": "John Doe",
    "password": "password123"
  }'

Expected Response:
  - Status: 200 OK (if successful)
  - Body: Empty (registration successful)

=============================================================================
3. LOGIN
=============================================================================
curl -X POST http://localhost:8080/api/v1/login \
  -H "Content-Type: application/json" \
  -d '{
    "email": "user@example.com",
    "password": "password123"
  }'

Expected Response:
  - Status: 200 OK
  - Body: {
    "user": {
      "id": 1,
      "name": "John Doe",
      "email": "user@example.com"
    },
    "accessResponse": {
      "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
      "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    }
  }

=============================================================================
4. FACEBOOK LOGIN
=============================================================================
curl -X POST http://localhost:8080/api/v1/facebook \
  -H "Content-Type: application/json" \
  -d '{
    "token": "facebook_access_token_here"
  }'

Expected Response:
  - Status: 200 OK
  - Body: Same structure as regular login response

=============================================================================
5. REFRESH TOKEN
=============================================================================
curl -X POST http://localhost:8080/api/v1/refresh-token \
  -H "Content-Type: application/json" \
  -d '{
    "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
  }'

Expected Response:
  - Status: 200 OK
  - Body: New access and refresh tokens

=============================================================================
USAGE EXAMPLES
=============================================================================

1. Complete Authentication Flow:
   # 1. Register a new user
   curl -X POST http://localhost:8080/api/v1/register \
     -H "Content-Type: application/json" \
     -d '{"email":"newuser@example.com","name":"New User","password":"password123"}'

   # 2. Login to get tokens
   curl -X POST http://localhost:8080/api/v1/login \
     -H "Content-Type: application/json" \
     -d '{"email":"newuser@example.com","password":"password123"}'

   # 3. Use access token for authenticated requests
   curl -X GET http://localhost:8080/api/v1/users/me \
     -H "Authorization: Bearer YOUR_ACCESS_TOKEN_HERE"

2. Error Handling Examples:
   # Invalid email format
   curl -X POST http://localhost:8080/api/v1/register \
     -H "Content-Type: application/json" \
     -d '{"email":"invalid-email","name":"User","password":"password123"}'

   # Password too short
   curl -X POST http://localhost:8080/api/v1/register \
     -H "Content-Type: application/json" \
     -d '{"email":"user@example.com","name":"User","password":"123"}'

   # User already exists
   curl -X POST http://localhost:8080/api/v1/register \
     -H "Content-Type: application/json" \
     -d '{"email":"existing@example.com","name":"User","password":"password123"}'

=============================================================================
NOTES
=============================================================================
- All endpoints return JSON responses
- Error responses include error messages in the response body
- Access tokens should be included in Authorization header for protected endpoints
- Refresh tokens should be stored securely and used to get new access tokens
- Facebook login requires a valid Facebook access token 